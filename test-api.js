// Exemplo de teste da API WhatsApp
// Execute este arquivo com: node test-api.js

const testAPI = async () => {
    const baseURL = 'http://localhost:3000';
    
    try {
        // 1. Verificar status
        console.log('üîç Verificando status da API...');
        const statusResponse = await fetch(`${baseURL}/status`);
        const status = await statusResponse.json();
        console.log('Status:', status);
        
        if (status.status !== 'connected') {
            console.log('‚ùå WhatsApp n√£o est√° conectado. Execute a aplica√ß√£o principal primeiro.');
            return;
        }
        
        // 2. Obter informa√ß√µes do cliente
        console.log('\nüì± Obtendo informa√ß√µes do cliente...');
        const clientResponse = await fetch(`${baseURL}/client-info`);
        const clientInfo = await clientResponse.json();
        console.log('Cliente:', clientInfo);
        
        // 3. Enviar mensagem de teste
        console.log('\nüì§ Enviando mensagem de teste...');
        
        // ALTERE ESTE N√öMERO PARA UM N√öMERO V√ÅLIDO
        const testNumber = '5511999999999'; // Substitua pelo seu n√∫mero
        const testMessage = 'Ol√°! Esta √© uma mensagem de teste da API WhatsApp. üöÄ';
        
        const messageResponse = await fetch(`${baseURL}/send-message`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                number: testNumber,
                message: testMessage
            })
        });
        
        const messageResult = await messageResponse.json();
        console.log('Resultado do envio:', messageResult);
        
        if (messageResult.success) {
            console.log('‚úÖ Mensagem enviada com sucesso!');
        } else {
            console.log('‚ùå Falha no envio:', messageResult.error);
        }
        
    } catch (error) {
        console.error('‚ùå Erro ao testar API:', error.message);
        console.log('Certifique-se de que a aplica√ß√£o principal est√° rodando (npm start)');
    }
};

// Verificar se fetch est√° dispon√≠vel (Node.js 18+)
if (typeof fetch === 'undefined') {
    console.log('‚ùå Este script requer Node.js 18+ ou instale node-fetch');
    console.log('Para Node.js < 18, instale: npm install node-fetch');
    process.exit(1);
}

// Executar teste
testAPI();